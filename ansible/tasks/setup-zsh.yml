# +------------------------+
# |       ZSH & ZINIT      |
# +------------------------+
# Copy over files for ZSH & Zinit
- name: Stat zinit
  stat:
    path: "{{ item }}"
  with_items:
    - '{{ home_dir }}/.zinit/bin'
    - '{{ dotfiles_dir }}/home/.zshrc'
  register: zsh

# Clone Zinit plugin manager for ZSH
- name: Clone zinit
  git:
    repo=https://github.com/zdharma/zinit.git
    dest='{{ home_dir }}/.zinit/bin'
  register: clone_zinit
  when: zsh.results[0].stat.exists == False

# Create default .zshrc file if one is not provided
# src='{{ home_dir }}/.oh-my-zsh/templates/zshrc.zsh-template'
- name: Creating new ~/.zshrc
  copy:
    src='/etc/zsh/zshrc'
    dest='{{ dotfiles_dir }}/home/.zshrc'
  when: zsh.results[1].stat.exists == False

# +------------------------+
# |       NERD Fonts       |
# +------------------------+
- name: Stat NERD Fonts
  stat:
    path: "{{ font_dir | default('/usr/share/fonts') }}/{{ terminal_font }}.otf"
  register: nerdfonts

- name: Create temporary NERD Fonts directory
  tempfile:
    state: directory
    prefix: "nerdfonts."
  register: temp
  when: nerdfonts.stat.exists == False

- set_fact:
    nerdfonts_dir: "{{ temp.path }}"
  when: nerdfonts.stat.exists == False

- name: Clone NERD Fonts
  git:
    repo=https://github.com/ryanoasis/nerd-fonts
    dest='{{ nerdfonts_dir }}/NerdFonts'
    depth=1
  register: clone_nerdfonts
  when: nerdfonts.stat.exists == False

- name: Install NERD Fonts
  command: '{{ nerdfonts_dir }}/NerdFonts/install.sh Hack'
  when: nerdfonts.stat.exists == False and clone_nerdfonts is defined and clone_nerdfonts is succeeded

# +------------------------+
# |    POWERLINE PROMPT    |
# +------------------------+
# - name: Stat powerline
#   stat:
#     path: "{{ font_dir | default('/usr/share/fonts') }}/FuraMono-Regular Powerline.otf"
#   register: powerline
# - name: Create temporary powerline directory
#   tempfile:
#     state: directory
#     prefix: "powerline."
#   register: temp
#   when: powerline.stat.exists == False
# - set_fact:
#     powerline_dir: "{{ temp.path }}"
#   when: powerline.stat.exists == False
# - name: Clone powerline fonts
#   git:
#     repo=https://github.com/powerline/fonts
#     dest='{{ powerline_dir }}/powerline'
#   register: clone_powerline
#   when: powerline.stat.exists == False
# - name: Install powerline fonts
#     command: '{{ powerline_dir }}/powerline/install.sh'
#   when: powerline.stat.exists == False and clone_powerline is defined and clone_powerline is succeeded

# +------------------------+
# | SPACESHIP PROMPT THEME |
# +------------------------+
# - set_fact:
#     spaceship_dir: '{{ home_dir }}/.oh-my-zsh/custom/themes/spaceship-prompt'
# - name: Stat spaceship theme
#   stat:
#     path: '{{ spaceship_dir }}'
#   register: spaceship
# - name: Clone spaceship theme
#   git:
#     repo=https://github.com/denysdovhan/spaceship-prompt
#     dest='{{ spaceship_dir }}'
#   register: clone_spaceship
#   when: spaceship.stat.exists == False
# - name: Symlink spaceship theme
#   file:
#     src='{{ spaceship_dir }}/spaceship.zsh-theme'
#     dest='{{ home_dir }}/.oh-my-zsh/custom/themes/spaceship.zsh-theme'
#     state=link
#   when: clone_spaceship is defined and clone_spaceship is succeeded
# - name: Ensure theme contains ansible section
#   lineinfile:
#     path: '{{ spaceship_dir }}/spaceship.zsh'
#     line: '    ansible       # Ansible section'
#     state: present
#   check_mode: yes
#   register: has_ansible
# - name: Add ansible section to theme
#   lineinfile:
#     path: '{{ spaceship_dir }}/spaceship.zsh'
#     regexp: '^\sdocker'
#     insertafter: '^.*docker'
#     line: '    ansible       # Ansible section'
#   when: has_ansible.changed == True
